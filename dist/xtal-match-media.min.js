import{XtallatX}from"xtal-element/xtal-latx.js";import{define}from"xtal-element/define.js";const mediaQueryString="media-query-string",matchesMediaQuery="matches-media-query";class XtalMatchMedia extends(XtallatX(HTMLElement)){constructor(){super(...arguments),this.value=!1}static get is(){return"xtal-match-media"}get mediaQueryString(){return this._mediaQueryString}set mediaQueryString(e){this.attr(mediaQueryString,e)}get matchesMediaQuery(){return this._matchesMediaQuery}static get observedAttributes(){return super.observedAttributes.concat([mediaQueryString])}attributeChangedCallback(e,t,a){switch(e){case mediaQueryString:this.disconnect(),this._mediaQueryString=a,null!==a&&(this._mql=window.matchMedia(this._mediaQueryString),this._boundMediaQueryHandler=this.handleMediaQueryChange.bind(this),this.connect(),this.updateValue(this._mql.matches));break;case matchesMediaQuery:this._matchesMediaQuery=null!=a}}connect(){this._mql.addListener(this._boundMediaQueryHandler)}disconnect(){this._mql&&this._mql.removeListener(this._boundMediaQueryHandler)}handleMediaQueryChange(e){this.updateValue(e.matches)}updateValue(e){this.value=e,this._matchesMediaQuery=e,this.de(matchesMediaQuery,{value:e})}connectedCallback(){this._upgradeProperties(["mediaQueryString"])}disconnectedCallback(){this.disconnect()}}define(XtalMatchMedia);